// Generated by view binder compiler. Do not edit!
package com.example.weatherapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.example.weatherapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutWeatherAdditionalInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guidelineValueStart;

  @NonNull
  public final TextView tvHumidityLabel;

  @NonNull
  public final TextView tvHumidityValue;

  @NonNull
  public final TextView tvPressureLabel;

  @NonNull
  public final TextView tvPressureValue;

  @NonNull
  public final TextView tvVisibilityLabel;

  @NonNull
  public final TextView tvVisibilityValue;

  private LayoutWeatherAdditionalInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guidelineValueStart, @NonNull TextView tvHumidityLabel,
      @NonNull TextView tvHumidityValue, @NonNull TextView tvPressureLabel,
      @NonNull TextView tvPressureValue, @NonNull TextView tvVisibilityLabel,
      @NonNull TextView tvVisibilityValue) {
    this.rootView = rootView;
    this.guidelineValueStart = guidelineValueStart;
    this.tvHumidityLabel = tvHumidityLabel;
    this.tvHumidityValue = tvHumidityValue;
    this.tvPressureLabel = tvPressureLabel;
    this.tvPressureValue = tvPressureValue;
    this.tvVisibilityLabel = tvVisibilityLabel;
    this.tvVisibilityValue = tvVisibilityValue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutWeatherAdditionalInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutWeatherAdditionalInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_weather_additional_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutWeatherAdditionalInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline_value_start;
      Guideline guidelineValueStart = rootView.findViewById(id);
      if (guidelineValueStart == null) {
        break missingId;
      }

      id = R.id.tv_humidity_label;
      TextView tvHumidityLabel = rootView.findViewById(id);
      if (tvHumidityLabel == null) {
        break missingId;
      }

      id = R.id.tv_humidity_value;
      TextView tvHumidityValue = rootView.findViewById(id);
      if (tvHumidityValue == null) {
        break missingId;
      }

      id = R.id.tv_pressure_label;
      TextView tvPressureLabel = rootView.findViewById(id);
      if (tvPressureLabel == null) {
        break missingId;
      }

      id = R.id.tv_pressure_value;
      TextView tvPressureValue = rootView.findViewById(id);
      if (tvPressureValue == null) {
        break missingId;
      }

      id = R.id.tv_visibility_label;
      TextView tvVisibilityLabel = rootView.findViewById(id);
      if (tvVisibilityLabel == null) {
        break missingId;
      }

      id = R.id.tv_visibility_value;
      TextView tvVisibilityValue = rootView.findViewById(id);
      if (tvVisibilityValue == null) {
        break missingId;
      }

      return new LayoutWeatherAdditionalInfoBinding((ConstraintLayout) rootView,
          guidelineValueStart, tvHumidityLabel, tvHumidityValue, tvPressureLabel, tvPressureValue,
          tvVisibilityLabel, tvVisibilityValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
